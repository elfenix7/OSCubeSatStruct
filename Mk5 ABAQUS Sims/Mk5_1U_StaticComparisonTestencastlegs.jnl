# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='Al6061')
mdb.models['Model-1'].materials['Al6061'].Density(table=((0.0027, ), ))
mdb.models['Model-1'].materials['Al6061'].Elastic(table=((69000000000.0, 0.33), 
    ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Al6061', name=
    'Al Section', thickness=None)
mdb.openStep(
    'C:/Users/js214/Desktop/ES100/CAD/Mk5 Design - Correct PC104 Spacing/Mk5_wInternals_forSimulation.STEP'
    , scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='Mk5_wInternals_forSimulation-1', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=2, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-2', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=3, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-3', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=4, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-4', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=5, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-5', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=6, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-6', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=7, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-7', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=8, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-8', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=9, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-9', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=10, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-10', type=DEFORMABLE_BODY)
mdb.models['Model-1'].PartFromGeometryFile(bodyNum=11, combine=False, 
    dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'Mk5_wInternals_forSimulation-11', type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-1'
    , toName='BatteryPackSim')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-5'
    , toName='PC104Short')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-2'
    , toName='PC104_1')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-3'
    , toName='PC104_2')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-4'
    , toName='PC104_3')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-6'
    , toName='Baseplate_Deployment')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-7'
    , toName='Baseplate_Plain')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-8'
    , toName='Rail_1_4?')
mdb.models['Model-1'].parts.changeKey(fromName='Rail_1_4?', toName='Rail_1')
mdb.models['Model-1'].parts.changeKey(fromName='Mk5_wInternals_forSimulation-9'
    , toName='Rail_3')
mdb.models['Model-1'].parts.changeKey(fromName=
    'Mk5_wInternals_forSimulation-11', toName='Rail_2')
mdb.models['Model-1'].parts.changeKey(fromName=
    'Mk5_wInternals_forSimulation-10', toName='Rail_4')
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Baseplate_Deployment-1', part=
    mdb.models['Model-1'].parts['Baseplate_Deployment'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Baseplate_Plain-1', part=mdb.models['Model-1'].parts['Baseplate_Plain'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'BatteryPackSim-1', part=mdb.models['Model-1'].parts['BatteryPackSim'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='PC104Short-1', 
    part=mdb.models['Model-1'].parts['PC104Short'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='PC104_1-1', 
    part=mdb.models['Model-1'].parts['PC104_1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='PC104_2-1', 
    part=mdb.models['Model-1'].parts['PC104_2'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='PC104_3-1', 
    part=mdb.models['Model-1'].parts['PC104_3'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Rail_1-1', 
    part=mdb.models['Model-1'].parts['Rail_1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Rail_2-1', 
    part=mdb.models['Model-1'].parts['Rail_2'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Rail_3-1', 
    part=mdb.models['Model-1'].parts['Rail_3'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Rail_4-1', 
    part=mdb.models['Model-1'].parts['Rail_4'])
mdb.models['Model-1'].parts['Baseplate_Deployment'].Set(cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Baseplate_Deployment_set')
mdb.models['Model-1'].parts['Baseplate_Plain'].Set(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Baseplate_plain_set')
mdb.models['Model-1'].parts['Baseplate_Plain'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Baseplate_Plain'].sets['Baseplate_plain_set'], 
    sectionName='Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Baseplate_Deployment'].SectionAssignment(offset=
    0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].sets['Baseplate_Deployment_set']
    , sectionName='Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['PC104Short-1'].suppress()
mdb.models['Model-1'].rootAssembly.suppressFeatures(('PC104Short-1', 
    'PC104_1-1', 'PC104_2-1', 'PC104_3-1', 'BatteryPackSim-1'))
mdb.models['Model-1'].parts['Rail_1'].Set(cells=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Rail_1_set')
mdb.models['Model-1'].parts['Rail_2'].Set(cells=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Rail_2_set')
mdb.models['Model-1'].parts['Rail_3'].Set(cells=
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Rail_3_set')
mdb.models['Model-1'].parts['Rail_3'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Rail_3'].sets['Rail_3_set'], sectionName=
    'Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Rail_4'].Set(cells=
    mdb.models['Model-1'].parts['Rail_4'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Rail_4_set')
mdb.models['Model-1'].parts['Rail_4'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Rail_4'].sets['Rail_4_set'], sectionName=
    'Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Rail_1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Rail_1'].sets['Rail_1_set'], sectionName=
    'Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Rail_2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Rail_2'].sets['Rail_2_set'], sectionName=
    'Al Section', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=HEX_DOMINATED, 
    regions=mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#1 ]', ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Rail_2'].PartitionFaceByAuto(face=
    mdb.models['Model-1'].parts['Rail_2'].faces[9])
mdb.models['Model-1'].parts['Rail_2'].deleteSeeds()
del mdb.models['Model-1'].parts['Rail_2'].features['Partition face-1']
mdb.models['Model-1'].parts['Rail_2'].PartitionCellByPlaneNormalToEdge(cells=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), edge=mdb.models['Model-1'].parts['Rail_2'].edges[16], point=
    mdb.models['Model-1'].parts['Rail_2'].vertices[15])
del mdb.models['Model-1'].parts['Rail_2'].features['Partition cell-1']
mdb.models['Model-1'].parts['Rail_2'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_2'].edges[33], point=
    mdb.models['Model-1'].parts['Rail_2'].vertices[15])
mdb.models['Model-1'].parts['Rail_2'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_2'].datums[10])
mdb.models['Model-1'].parts['Rail_2'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_2'].datums[11])
mdb.models['Model-1'].parts['Rail_2'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_2'].edges[68], point=
    mdb.models['Model-1'].parts['Rail_2'].vertices[44])
mdb.models['Model-1'].parts['Rail_2'].DatumPlaneByOffset(flip=SIDE1, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_2'].datums[13])
mdb.models['Model-1'].parts['Rail_2'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_2'].datums[14])
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(algorithm=ADVANCING_FRONT
    , elemShape=HEX_DOMINATED, regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), technique=SWEEP)
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.8)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteSeeds()
mdb.models['Model-1'].parts['Rail_2'].seedEdgeByBias(biasMethod=DOUBLE, 
    constraint=FINER, endEdges=
    mdb.models['Model-1'].parts['Rail_2'].edges.getSequenceFromMask((
    '[#ffffffff:3 #3fff ]', ), ), maxSize=7.6, minSize=1.52)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#6 ]', 
    ), ))
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=HEX_DOMINATED, 
    regions=mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#7 ]', ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#7 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=HEX, regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#7 ]', 
    ), ))
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Rail_2'].deleteSeeds(regions=
    mdb.models['Model-1'].parts['Rail_2'].edges.getSequenceFromMask((
    '[#ffffffff:3 #3fff ]', ), ))
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask((
    '[#2 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_2'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_2'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_1'].edges[53], point=
    mdb.models['Model-1'].parts['Rail_1'].vertices[32])
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_1'].edges[53], point=
    mdb.models['Model-1'].parts['Rail_1'].vertices[27])
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_1'].datums[4])
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByOffset(flip=SIDE1, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_1'].datums[3])
mdb.models['Model-1'].parts['Rail_1'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_1'].datums[6])
mdb.models['Model-1'].parts['Rail_1'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_1'].datums[5])
mdb.models['Model-1'].parts['Rail_1'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['Rail_1'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask((
    '[#2 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_1'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask((
    '[#4 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_1'].edges[109], point=
    mdb.models['Model-1'].parts['Rail_1'].vertices[59])
mdb.models['Model-1'].parts['Rail_1'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_1'].datums[14])
mdb.models['Model-1'].parts['Rail_1'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_1'].datums[15])
mdb.models['Model-1'].parts['Rail_1'].setMeshControls(elemShape=HEX_DOMINATED, 
    regions=mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['Rail_1'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask((
    '[#2 ]', ), ), ))
mdb.models['Model-1'].parts['Rail_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_1'].cells.getSequenceFromMask(('[#f ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_1'].generateMesh()
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_3'].edges[47], point=
    mdb.models['Model-1'].parts['Rail_3'].vertices[27])
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_3'].edges[47], point=
    mdb.models['Model-1'].parts['Rail_3'].vertices[11])
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_3'].edges[47], point=
    mdb.models['Model-1'].parts['Rail_3'].vertices[32])
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByOffset(flip=SIDE1, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_3'].datums[5])
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_3'].datums[4])
mdb.models['Model-1'].parts['Rail_3'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_3'].datums[3])
mdb.models['Model-1'].parts['Rail_3'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_3'].datums[8])
mdb.models['Model-1'].parts['Rail_3'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_3'].datums[7])
mdb.models['Model-1'].parts['Rail_3'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_3'].datums[6])
mdb.models['Model-1'].parts['Rail_3'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#e ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_3'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask((
    '[#e ]', ), ), ))
mdb.models['Model-1'].parts['Rail_3'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_3'].cells.getSequenceFromMask(('[#f ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_3'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Rail_4'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_4'].edges[38], point=
    mdb.models['Model-1'].parts['Rail_4'].vertices[3])
mdb.models['Model-1'].parts['Rail_4'].DatumPlaneByPointNormal(normal=
    mdb.models['Model-1'].parts['Rail_4'].edges[38], point=
    mdb.models['Model-1'].parts['Rail_4'].vertices[8])
mdb.models['Model-1'].parts['Rail_4'].DatumPlaneByOffset(flip=SIDE2, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_4'].datums[4])
mdb.models['Model-1'].parts['Rail_4'].DatumPlaneByOffset(flip=SIDE1, offset=5.0
    , plane=mdb.models['Model-1'].parts['Rail_4'].datums[3])
mdb.models['Model-1'].parts['Rail_4'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_4'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_4'].datums[6])
mdb.models['Model-1'].parts['Rail_4'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Rail_4'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), datumPlane=mdb.models['Model-1'].parts['Rail_4'].datums[5])
mdb.models['Model-1'].parts['Rail_4'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Rail_4'].cells.getSequenceFromMask(('[#7 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Rail_4'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Rail_4'].cells.getSequenceFromMask(('[#6 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.8)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
mdb.models['Model-1'].parts['Rail_4'].deleteMesh()
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), point1=
    mdb.models['Model-1'].parts['Baseplate_Plain'].vertices[175], point2=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[220], MIDDLE), point3=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[331], MIDDLE))
del mdb.models['Model-1'].parts['Baseplate_Plain'].features['Partition cell-1']
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), point1=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[172], MIDDLE), point2=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[184], MIDDLE), point3=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[179], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Plain'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#2 ]', ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['Baseplate_Plain'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Baseplate_Plain'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1f ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Plain'].setMeshControls(elemShape=TET, 
    regions=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1f ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByOffset(flip=SIDE1, 
    offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].faces[74])
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByOffset(flip=SIDE1, 
    offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].faces[81])
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByOffset(flip=SIDE1, 
    offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].faces[67])
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByOffset(flip=SIDE1, 
    offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].faces[75])
mdb.models['Model-1'].parts['Baseplate_Plain'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1f ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#8 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[12])
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[11])
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#40 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[9])
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[10])
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#10 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[9])
mdb.models['Model-1'].parts['Baseplate_Plain'].PartitionCellByDatumPlane(cells=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[10])
mdb.models['Model-1'].parts['Baseplate_Plain'].setMeshControls(elemShape=HEX, 
    regions=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#35 ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Baseplate_Plain'].setElementType(elemTypes=(
    ElemType(elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#35 ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[214], MIDDLE), 
    point2=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[210], MIDDLE), 
    point3=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[221], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Deployment'].DatumPlaneByOffset(flip=
    SIDE1, offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[99])
mdb.models['Model-1'].parts['Baseplate_Deployment'].DatumPlaneByOffset(flip=
    SIDE1, offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[93])
mdb.models['Model-1'].parts['Baseplate_Deployment'].DatumPlaneByOffset(flip=
    SIDE1, offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[85])
mdb.models['Model-1'].parts['Baseplate_Deployment'].DatumPlaneByOffset(flip=
    SIDE1, offset=12.0, plane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[86])
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByDatumPlane(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#8 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].datums[5])
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByDatumPlane(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#10 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].datums[6])
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByDatumPlane(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#44 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].datums[7])
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByDatumPlane(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#110 ]', ), ), datumPlane=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].datums[4])
mdb.models['Model-1'].parts['Baseplate_Deployment'].setMeshControls(algorithm=
    ADVANCING_FRONT, regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), technique=SWEEP)
mdb.models['Model-1'].parts['Baseplate_Deployment'].setMeshControls(elemShape=
    TET, regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#fcc ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Baseplate_Deployment'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#fcc ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#2 ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].FrequencyStep(minEigen=1.0, name='Step-1', numEigen=4, 
    previous='Initial')
mdb.models['Model-1'].MPCSection(mpcType=BEAM_MPC, name='ConnSect-1', userMode=
    DOF_MODE, userType=0)
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].edges[214], 
    CENTER))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].edges[90], 
    CENTER))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].edges[212], 
    CENTER))
mdb.models['Model-1'].rootAssembly.Set(name='Set-1', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[25], 
    mdb.models['Model-1'].rootAssembly.referencePoints[26]))
mdb.models['Model-1'].rootAssembly.engineeringFeatures.PointFastener(
    additionalMass=0.3, name='Fasteners-1', physicalRadius=2.86, region=
    mdb.models['Model-1'].rootAssembly.sets['Set-1'], sectionName='ConnSect-1')
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].edges[52], 
    CENTER))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].edges[153], 
    CENTER))
mdb.models['Model-1'].rootAssembly.Set(name='Set-2', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[28], 
    mdb.models['Model-1'].rootAssembly.referencePoints[29]))
mdb.models['Model-1'].rootAssembly.engineeringFeatures.PointFastener(
    additionalMass=0.3, name='Fasteners-2', physicalRadius=2.86, region=
    mdb.models['Model-1'].rootAssembly.sets['Set-2'], sectionName='ConnSect-1', 
    unsorted=OFF)
mdb.models['Model-1'].rootAssembly.suppressFeatures(('Rail_2-1', 'Rail_1-1', 
    'Rail_4-1'))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='testfastenerjob', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['testfastenerjob'].submit(consistencyChecking=OFF)
mdb.jobs['testfastenerjob']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE MASS PARAMETER FOR THE *FASTENER PROPERTY OPTION IS NO LONGER SUPPORTED. IF NEEDED CONSIDER ADDING A MASS ELEMENT AT THE REFERENCE NODE.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE MASS PARAMETER FOR THE *FASTENER PROPERTY OPTION IS NO LONGER SUPPORTED. IF NEEDED CONSIDER ADDING A MASS ELEMENT AT THE REFERENCE NODE.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE MORE THAN ONE SPOT WELD CONNECTION POINT AT REFERENCE NODE 2 (ASSEMBLY) FOR INTERACTION FASTENERS-1. PLEASE CHECK THE *FASTENER DEFINITION OPTION. A SEARCH RADIUS OF 2.1870 WAS USED. THIS MAY HAVE TO BE INCREASED. ALTERNATIVELY, IF COINCIDENT FACETS ARE DESIRED TO BE SPOT WELDED PLEASE SPECIFY DISTINCT SURFACES CONTAINING EACH OF THE COINCIDENT FACETS AND LIST THESE SURFACES IN THE DATA LINES OF THE *FASTENER DEFINITION OPTION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE MORE THAN ONE SPOT WELD CONNECTION POINT AT REFERENCE NODE 3 (ASSEMBLY) FOR INTERACTION FASTENERS-1. PLEASE CHECK THE *FASTENER DEFINITION OPTION. A SEARCH RADIUS OF 3.0829 WAS USED. THIS MAY HAVE TO BE INCREASED. ALTERNATIVELY, IF COINCIDENT FACETS ARE DESIRED TO BE SPOT WELDED PLEASE SPECIFY DISTINCT SURFACES CONTAINING EACH OF THE COINCIDENT FACETS AND LIST THESE SURFACES IN THE DATA LINES OF THE *FASTENER DEFINITION OPTION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE MORE THAN ONE SPOT WELD CONNECTION POINT AT REFERENCE NODE 4 (ASSEMBLY) FOR INTERACTION FASTENERS-2. PLEASE CHECK THE *FASTENER DEFINITION OPTION. A SEARCH RADIUS OF 2.1870 WAS USED. THIS MAY HAVE TO BE INCREASED. ALTERNATIVELY, IF COINCIDENT FACETS ARE DESIRED TO BE SPOT WELDED PLEASE SPECIFY DISTINCT SURFACES CONTAINING EACH OF THE COINCIDENT FACETS AND LIST THESE SURFACES IN THE DATA LINES OF THE *FASTENER DEFINITION OPTION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE MORE THAN ONE SPOT WELD CONNECTION POINT AT REFERENCE NODE 5 (ASSEMBLY) FOR INTERACTION FASTENERS-2. PLEASE CHECK THE *FASTENER DEFINITION OPTION. A SEARCH RADIUS OF 0.96900 WAS USED. THIS MAY HAVE TO BE INCREASED. ALTERNATIVELY, IF COINCIDENT FACETS ARE DESIRED TO BE SPOT WELDED PLEASE SPECIFY DISTINCT SURFACES CONTAINING EACH OF THE COINCIDENT FACETS AND LIST THESE SURFACES IN THE DATA LINES OF THE *FASTENER DEFINITION OPTION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE *FASTENER INTERACTION NAME FASTENERS-1 HAS NO VALID SPOT WELD DEFINITIONS. PLEASE CHECK THE FASTENER DEFINITION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE *FASTENER INTERACTION NAME FASTENERS-2 HAS NO VALID SPOT WELD DEFINITIONS. PLEASE CHECK THE FASTENER DEFINITION.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '392 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-2 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\testfastenerjob.odb', 'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'testfastenerjob'})
mdb.jobs['testfastenerjob']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'testfastenerjob'})
del mdb.models['Model-1'].rootAssembly.engineeringFeatures.fasteners['Fasteners-1']
del mdb.models['Model-1'].rootAssembly.engineeringFeatures.fasteners['Fasteners-2']
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#81a ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByExtendFace(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#8 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[170])
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionCellByExtendFace(
    cells=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#10 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[19])
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteFeatures((
    'Partition cell-6', 'Partition cell-7'))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.83, name='__profile__', 
    sheetSize=33.49, transform=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[115], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[369], 
    sketchOrientation=RIGHT, origin=(-82.392244, -30.271531, 46.709565)))
mdb.models['Model-1'].parts['Baseplate_Deployment'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    -4.24910003994, 0.265815831884215), point1=(-6.25, 0.27))
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionFaceBySketch(
    faces=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces.getSequenceFromMask(
    ('[#0:3 #80000 ]', ), ), sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchUpEdge=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[369])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Rail_1-1', 'Rail_2-1', 
    'Rail_4-1'))
mdb.models['Model-1'].rootAssembly.suppressFeatures(('Rail_2-1', 'Rail_3-1', 
    'Rail_4-1'))
mdb.models['Model-1'].rootAssembly.features['Baseplate_Plain-1'].suppress()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Baseplate_Deployment'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Baseplate_Deployment'].features['Partition face-1']
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#800 ]', ), ))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.83, name='__profile__', 
    sheetSize=33.49, transform=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Baseplate_Deployment'].faces[115], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[369], 
    sketchOrientation=RIGHT, origin=(-82.392244, -30.271531, 46.709565)))
mdb.models['Model-1'].parts['Baseplate_Deployment'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    -4.24910003994, 0.265815831884215), point1=(-6.77, 0.27))
mdb.models['Model-1'].parts['Baseplate_Deployment'].PartitionFaceBySketch(
    faces=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].faces.getSequenceFromMask(
    ('[#0:3 #80000 ]', ), ), sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchUpEdge=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges[369])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedEdgeByBias(biasMethod=
    DOUBLE, constraint=FINER, endEdges=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges.getSequenceFromMask(
    ('[#40 ]', ), ), maxSize=7.6, minSize=1.52)
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedEdgeByBias(biasMethod=
    DOUBLE, constraint=FINER, endEdges=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges.getSequenceFromMask(
    ('[#40 ]', ), ), maxSize=1.0, minSize=0.5)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteSeeds(regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].edges.getSequenceFromMask(
    ('[#40 #0:6 #2000000 #0:3 #100000 ]', ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
del mdb.models['Model-1'].parts['Baseplate_Deployment'].features['Partition face-1']
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Baseplate_Plain-1'].resume()
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Rail_2-1', 'Rail_3-1', 
    'Rail_4-1'))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-Rail_1-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_1-1'].faces.getSequenceFromMask(
    ('[#ab95f7d4 #3f4001 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-Baseplate_Deployment-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:3 #180000 #0:2 #400000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-4-Rail_2-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_2-1'].faces.getSequenceFromMask(
    ('[#4015f6ae #7e ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-4-Baseplate_Deployment-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:3 #18000 #0:2 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-8-Rail_3-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].faces.getSequenceFromMask(
    ('[#afaaf7e8 #3f2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-8-Baseplate_Deployment-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:3 #60000 #0:2 #100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-12-Rail_4-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_4-1'].faces.getSequenceFromMask(
    ('[#4015f6ae #7e ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-12-Baseplate_Deployment-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:3 #6000 #0:2 #800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-14-Rail_1-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_1-1'].faces.getSequenceFromMask(
    ('[#ab95f7d4 #3f4001 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-14-Baseplate_Plain-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0:2 #18000000 #0:3 #20 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-17-Rail_2-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_2-1'].faces.getSequenceFromMask(
    ('[#4015f6ae #7e ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-17-Baseplate_Plain-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0:2 #80000000 #1 #0:2 #4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-21-Rail_3-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].faces.getSequenceFromMask(
    ('[#afaaf7e8 #3f2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-21-Baseplate_Plain-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0:2 #60000000 #0:3 #8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-25-Rail_4-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_4-1'].faces.getSequenceFromMask(
    ('[#4015f6ae #7e ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-25-Baseplate_Plain-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0:3 #6 #0:2 #10 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-1-Rail_1-1'], name=
    'CP-1-Rail_1-1-Baseplate_Deployment-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-1-Baseplate_Deployment-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-4-Rail_2-1'], name=
    'CP-4-Rail_2-1-Baseplate_Deployment-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-4-Baseplate_Deployment-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-8-Rail_3-1'], name=
    'CP-8-Rail_3-1-Baseplate_Deployment-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-8-Baseplate_Deployment-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-12-Rail_4-1'], name=
    'CP-12-Rail_4-1-Baseplate_Deployment-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-12-Baseplate_Deployment-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-14-Rail_1-1'], name=
    'CP-14-Rail_1-1-Baseplate_Plain-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-14-Baseplate_Plain-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-17-Rail_2-1'], name=
    'CP-17-Rail_2-1-Baseplate_Plain-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-17-Baseplate_Plain-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-21-Rail_3-1'], name=
    'CP-21-Rail_3-1-Baseplate_Plain-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-21-Baseplate_Plain-1'])
mdb.models['Model-1'].Tie(adjust=ON, constraintEnforcement=SURFACE_TO_SURFACE, 
    master=mdb.models['Model-1'].rootAssembly.surfaces['CP-25-Rail_4-1'], name=
    'CP-25-Rail_4-1-Baseplate_Plain-1', positionToleranceMethod=COMPUTED, 
    slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-25-Baseplate_Plain-1'])
del mdb.jobs['testfastenerjob']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5ModalSeed3', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Mk5ModalSeed3'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1089 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed3.odb', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 17288, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed3', 'memory': 1192.0})
mdb.jobs['Mk5ModalSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 197.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(JOB_COMPLETED, {
    'time': 'Mon Mar  8 23:39:56 2021', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1089 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed3.odb', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 12096, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed3', 'memory': 1898.0})
mdb.jobs['Mk5ModalSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 182.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed3', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed3']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(JOB_COMPLETED, {
    'time': 'Mon Mar  8 23:41:58 2021', 'jobName': 'Mk5ModalSeed3'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'MISES', 'MISESMAX', 'U'))
mdb.models['Model-1'].steps['Step-1'].setValues(numEigen=10)
mdb.jobs['Mk5ModalSeed3'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_DEPLOYMENT-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1089 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed3.odb', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 23104, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed3', 'memory': 2304.0})
mdb.jobs['Mk5ModalSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 182.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed3', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed3']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(JOB_COMPLETED, {
    'time': 'Mon Mar  8 23:48:44 2021', 'jobName': 'Mk5ModalSeed3'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Baseplate_Deployment'].suppressFeatures((
    'Partition cell-1', 'Datum plane-1', 'Datum plane-2', 'Datum plane-3', 
    'Datum plane-4', 'Partition cell-2', 'Partition cell-3', 
    'Partition cell-4', 'Partition cell-5'))
mdb.models['Model-1'].parts['Baseplate_Deployment'].setMeshControls(elemShape=
    TET, regions=
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Baseplate_Deployment'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Baseplate_Deployment'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Mk5ModalSeed3'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T2_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T3_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T4_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T5_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T6_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T7_BASEPLATE_PLAIN-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1044 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed3.odb', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 6752, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed3', 'memory': 2397.0})
mdb.jobs['Mk5ModalSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 187.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed3', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed3']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(JOB_COMPLETED, {
    'time': 'Mon Mar  8 23:59:26 2021', 'jobName': 'Mk5ModalSeed3'})
mdb.models['Model-1'].parts['Baseplate_Plain'].suppressFeatures((
    'Partition cell-1', 'Datum plane-1', 'Datum plane-2', 'Datum plane-3', 
    'Datum plane-4', 'Partition cell-2', 'Partition cell-3', 
    'Partition cell-4', 'Partition cell-5', 'Partition cell-6', 
    'Partition cell-7'))
mdb.models['Model-1'].parts['Baseplate_Plain'].setMeshControls(elemShape=TET, 
    regions=
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Baseplate_Plain'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Baseplate_Plain'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Mk5ModalSeed3'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed3.odb', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 8500, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed3', 'memory': 2481.0})
mdb.jobs['Mk5ModalSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 193.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed3', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed3']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed3'})
mdb.jobs['Mk5ModalSeed3']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  9 00:01:37 2021', 'jobName': 'Mk5ModalSeed3'})
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Rail_1'].deleteMesh()
mdb.models['Model-1'].parts['Rail_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Rail_1'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh()
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_3'].deleteMesh()
mdb.models['Model-1'].parts['Rail_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Rail_3'].generateMesh()
mdb.models['Model-1'].parts['Rail_4'].deleteMesh()
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5ModalSeed2', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Mk5ModalSeed2'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_S,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_S,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_2-1_S,ASSEMBLY__T0_RAIL_2-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_2-1_SN,ASSEMBLY__T0_RAIL_2-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_3-1_S,ASSEMBLY__T0_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_3-1_SN,ASSEMBLY__T0_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_3-1_S,ASSEMBLY__T1_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_3-1_SN,ASSEMBLY__T1_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_S,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_S,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '234 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '899 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed2.odb', 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 22892, 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed2', 'memory': 4621.0})
mdb.jobs['Mk5ModalSeed2']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(MINIMUM_MEMORY, {'minimum_memory': 338.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed2', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed2']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed2'})
mdb.jobs['Mk5ModalSeed2']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  9 00:06:25 2021', 'jobName': 'Mk5ModalSeed2'})
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Rail_1'].deleteMesh()
mdb.models['Model-1'].parts['Rail_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Rail_1'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh()
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_3'].deleteMesh()
mdb.models['Model-1'].parts['Rail_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Rail_3'].generateMesh()
mdb.models['Model-1'].parts['Rail_4'].deleteMesh()
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=80, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5ModalSeed1', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Mk5ModalSeed1'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_S,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_S,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_2-1_S,ASSEMBLY__T0_RAIL_2-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_3-1_S,ASSEMBLY__T0_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_3-1_S,ASSEMBLY__T1_RAIL_3-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_S,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_S,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '494 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '20 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '648 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed1.odb', 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 8252, 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5ModalSeed1', 'memory': 12871.0})
mdb.jobs['Mk5ModalSeed1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(MINIMUM_MEMORY, {'minimum_memory': 1546.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Mk5ModalSeed1', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Mk5ModalSeed1']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5ModalSeed1'})
mdb.jobs['Mk5ModalSeed1']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  9 00:16:32 2021', 'jobName': 'Mk5ModalSeed1'})
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Rail_1'].deleteMesh()
mdb.models['Model-1'].parts['Rail_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Rail_1'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh()
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_3'].deleteMesh()
mdb.models['Model-1'].parts['Rail_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Rail_3'].generateMesh()
mdb.models['Model-1'].parts['Rail_4'].deleteMesh()
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5ModalSeed5', nodalOutputPrecision=
    SINGLE, numCpus=6, numDomains=6, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Mk5ModalSeed5'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5ModalSeed5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '145 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1960 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'The volume of 1 elements is zero, small, or negative. Check coordinates or node numbering, or modify the mesh seed. In the case of a tetrahedron this error may indicate that all nodes are located very nearly in a plane. The elements have been identified in element set ErrElemVolSmallNegZero.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5ModalSeed5.odb', 'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.jobs['Mk5ModalSeed5']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Mk5ModalSeed5'})
mdb.models['Model-1'].parts['Baseplate_Deployment'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Deployment'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Baseplate_Deployment'].generateMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].deleteMesh()
mdb.models['Model-1'].parts['Baseplate_Plain'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Baseplate_Plain'].generateMesh()
mdb.models['Model-1'].parts['Rail_1'].deleteMesh()
mdb.models['Model-1'].parts['Rail_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_1'].generateMesh()
mdb.models['Model-1'].parts['Rail_2'].deleteMesh()
mdb.models['Model-1'].parts['Rail_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_2'].generateMesh()
mdb.models['Model-1'].parts['Rail_3'].deleteMesh()
mdb.models['Model-1'].parts['Rail_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_3'].generateMesh()
mdb.models['Model-1'].parts['Rail_4'].deleteMesh()
mdb.models['Model-1'].parts['Rail_4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['Rail_4'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].steps['Step-1'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].StaticStep(name='Step-2', previous='Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0 #20000000 #8204 ]', ), ), name='Set-3')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'], u1=0.0, 
    u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].Gravity(comp2=-9800.0, createStepName='Step-2', 
    distributionType=UNIFORM, field='', name='Load-1')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-17', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:2 #2081080 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, field='', magnitude=2634196.0, name='Load-2', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-17'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=80, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticSeed3', nodalOutputPrecision=
    SINGLE, numCpus=6, numDomains=6, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticSeed3'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticSeed3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticSeed3.odb', 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 11200, 
    'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticSeed3', 'memory': 1099.0})
mdb.jobs['Mk5StaticSeed3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(MINIMUM_MEMORY, {'minimum_memory': 187.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticSeed3', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticSeed3']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Mk5StaticSeed3'})
mdb.jobs['Mk5StaticSeed3']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  9 01:42:42 2021', 'jobName': 'Mk5StaticSeed3'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].loads['Load-2']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:2 #2081080 ]', ), ), name='Set-4')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-4'], u1=UNSET, 
    u2=-0.15, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComparison', 
    nodalOutputPrecision=SINGLE, numCpus=6, numDomains=6, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComparison'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\ABAQUS\\Mk5StaticTestComparison.odb', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 33212, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1098.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 1.0, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparison', 'time': 'Mon Mar 22 23:31:42 2021'})
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].steps['Step-2'].setValues()
mdb.jobs['Mk5StaticTestComparison'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\ABAQUS\\Mk5StaticTestComparison.odb', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 43968, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1097.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 1.0, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparison', 'time': 'Mon Mar 22 23:35:29 2021'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-2'].setValues(variables=(
    'S', 'MISES', 'E', 'PE', 'PEEQ', 'PEMAG', 'LE', 'U', 'RF', 'CF', 'CSTRESS', 
    'CDISP'))
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-18', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Deployment-1'].faces.getSequenceFromMask(
    ('[#0:2 #2081080 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-2', 
    distributionType=TOTAL_FORCE, field='', magnitude=500000000.0, name=
    'Load-2', region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-18'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComparisonLoadVersion', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComparisonLoadVersion'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComparisonLoadVersion.odb', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 45324, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1099.0, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(STATUS, {
    'totalTime': 1.0, 'increment': 1, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonLoadVersion'})
mdb.jobs['Mk5StaticTestComparisonLoadVersion']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparisonLoadVersion', 
    'time': 'Mon Mar 22 23:39:07 2021'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-2'].resume()
mdb.models['Model-1'].steps['Step-2'].setValues(initialInc=0.01, maxInc=0.1)
mdb.jobs['Mk5StaticTestComparison'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\ABAQUS\\Mk5StaticTestComparison.odb', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 30652, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1099.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.01, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.02, 
    'increment': 2, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.035, 
    'increment': 3, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.015, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.0575, 
    'increment': 4, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0225, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.09125, 
    'increment': 5, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.03375, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.141875, 
    'increment': 6, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.050625, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.2178125, 
    'increment': 7, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0759375, 'stepTime': 0.2178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.3178125, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.4178125, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.5178125, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.6178125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.7178125, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.8178125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.9178125, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 1.0, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0821875000000001, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparison', 'time': 'Tue Mar 23 00:00:13 2021'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-2'].setValues(variables=(
    'S', 'MISES', 'E', 'PE', 'PEEQ', 'PEMAG', 'LE', 'U', 'RF', 'CF', 'CSTRESS', 
    'CDISP', 'CFORCE'))
mdb.jobs['Mk5StaticTestComparison'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\ABAQUS\\Mk5StaticTestComparison.odb', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 27296, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1099.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.01, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.02, 
    'increment': 2, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.035, 
    'increment': 3, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.015, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.0575, 
    'increment': 4, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0225, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.09125, 
    'increment': 5, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.03375, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.141875, 
    'increment': 6, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.050625, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.2178125, 
    'increment': 7, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0759375, 'stepTime': 0.2178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.3178125, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.4178125, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.5178125, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.6178125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.7178125, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.8178125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 0.9178125, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(STATUS, {'totalTime': 1.0, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0821875000000001, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison'})
mdb.jobs['Mk5StaticTestComparison']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparison', 'time': 'Tue Mar 23 00:03:26 2021'})
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(50.0, 50.0, 0.0))
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumAxisByTwoPoint(point1=
    mdb.models['Model-1'].parts['Baseplate_Plain'].vertices[212], point2=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[289], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByThreePoints(point1=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[288], MIDDLE), point2=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[183], MIDDLE), point3=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[286], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumAxisByNormalToPlane(plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[28], point=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[192], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPlaneByThreePoints(point1=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[286], MIDDLE), point2=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[287], MIDDLE), point3=
    mdb.models['Model-1'].parts['Baseplate_Plain'].vertices[206])
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumAxisByNormalToPlane(plane=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[30], point=
    mdb.models['Model-1'].parts['Baseplate_Plain'].InterestingPoint(
    mdb.models['Model-1'].parts['Baseplate_Plain'].edges[194], MIDDLE))
mdb.models['Model-1'].parts['Baseplate_Plain'].DatumPointByOffset(point=
    mdb.models['Model-1'].parts['Baseplate_Plain'].vertices[212], vector=(41.5, 
    -1.0, 41.5))
mdb.models['Model-1'].parts['Baseplate_Plain'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Baseplate_Plain'].datums[32])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-19', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0 #20000000 #8204 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='s_Set-5', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].referencePoints[33], 
    ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-19'], name=
    'Constraint-9', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.sets['s_Set-5'], thickness=ON, 
    tieRotations=ON)
del mdb.models['Model-1'].constraints['Constraint-9']
mdb.models['Model-1'].rootAssembly.Set(name='m_Set-6', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].referencePoints[33], 
    ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-20', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0 #20000000 #8204 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=
    mdb.models['Model-1'].rootAssembly.sets['m_Set-6'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-9', 
    surface=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-20'], u1=ON, 
    u2=ON, u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.Set(name='Set-7', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].referencePoints[33], 
    ))
mdb.models['Model-1'].EncastreBC(createStepName='Step-2', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-7'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComparisonRP', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComparisonRP'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComparisonRP.odb', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 35448, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1103.0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.01, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.02, 
    'increment': 2, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.035, 
    'increment': 3, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.015, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.0575, 
    'increment': 4, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0225, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.09125, 
    'increment': 5, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.03375, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.141875, 
    'increment': 6, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.050625, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.2178125, 
    'increment': 7, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0759375, 'stepTime': 0.2178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.3178125, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.4178125, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.5178125, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.6178125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.7178125, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.8178125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.9178125, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 1.0, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0821875000000001, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparisonRP', 
    'time': 'Tue Mar 23 00:14:17 2021'})
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.06)
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].steps['Step-2'].setValues(initialInc=0.1, maxInc=1.0, 
    maxNumInc=1000, minInc=0.0012, timePeriod=120.0)
mdb.jobs['Mk5StaticTestComparisonRP'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComparisonRP.odb', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 52056, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1102.0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.1, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.2, 
    'increment': 2, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.35, 
    'increment': 3, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.15, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.575, 
    'increment': 4, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.225, 'stepTime': 0.575, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 0.9125, 
    'increment': 5, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.3375, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 1.41875, 
    'increment': 6, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.50625, 'stepTime': 1.41875, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 2.178125, 
    'increment': 7, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.759375, 'stepTime': 2.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 3.178125, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 3.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 4.178125, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 4.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 5.178125, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 5.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 6.178125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 6.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 7.178125, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 7.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 8.178125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 8.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 9.178125, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 9.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 10.178125, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 10.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 11.178125, 
    'increment': 16, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 11.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 12.178125, 
    'increment': 17, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 12.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 13.178125, 
    'increment': 18, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 13.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 14.178125, 
    'increment': 19, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 14.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 15.178125, 
    'increment': 20, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 15.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 16.178125, 
    'increment': 21, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 16.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 17.178125, 
    'increment': 22, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 17.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 18.178125, 
    'increment': 23, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 18.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 19.178125, 
    'increment': 24, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 19.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 20.178125, 
    'increment': 25, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 20.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 21.178125, 
    'increment': 26, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 21.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 22.178125, 
    'increment': 27, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 22.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 23.178125, 
    'increment': 28, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 23.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 24.178125, 
    'increment': 29, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 24.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 25.178125, 
    'increment': 30, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 25.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 26.178125, 
    'increment': 31, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 26.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 27.178125, 
    'increment': 32, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 27.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 28.178125, 
    'increment': 33, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 28.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 29.178125, 
    'increment': 34, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 29.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 30.178125, 
    'increment': 35, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 30.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 31.178125, 
    'increment': 36, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 31.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 32.178125, 
    'increment': 37, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 32.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 33.178125, 
    'increment': 38, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 33.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 34.178125, 
    'increment': 39, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 34.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 35.178125, 
    'increment': 40, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 35.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 36.178125, 
    'increment': 41, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 36.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 37.178125, 
    'increment': 42, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 37.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 38.178125, 
    'increment': 43, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 38.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 39.178125, 
    'increment': 44, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 39.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 40.178125, 
    'increment': 45, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 40.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 41.178125, 
    'increment': 46, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 41.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 42.178125, 
    'increment': 47, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 42.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 43.178125, 
    'increment': 48, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 43.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 44.178125, 
    'increment': 49, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 44.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 45.178125, 
    'increment': 50, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 45.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 46.178125, 
    'increment': 51, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 46.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 47.178125, 
    'increment': 52, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 47.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 48.178125, 
    'increment': 53, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 48.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 49.178125, 
    'increment': 54, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 49.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 50.178125, 
    'increment': 55, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 50.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 51.178125, 
    'increment': 56, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 51.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 52.178125, 
    'increment': 57, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 52.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 53.178125, 
    'increment': 58, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 53.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 54.178125, 
    'increment': 59, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 54.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 55.178125, 
    'increment': 60, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 55.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 56.178125, 
    'increment': 61, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 56.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 57.178125, 
    'increment': 62, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 57.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 58.178125, 
    'increment': 63, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 58.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 59.178125, 
    'increment': 64, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 59.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 60.178125, 
    'increment': 65, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 60.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 61.178125, 
    'increment': 66, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 61.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 62.178125, 
    'increment': 67, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 62.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 63.178125, 
    'increment': 68, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 63.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 64.178125, 
    'increment': 69, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 64.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 65.178125, 
    'increment': 70, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 65.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 66.178125, 
    'increment': 71, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 66.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 67.178125, 
    'increment': 72, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 67.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 68.178125, 
    'increment': 73, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 68.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 69.178125, 
    'increment': 74, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 69.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 70.178125, 
    'increment': 75, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 70.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 71.178125, 
    'increment': 76, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 71.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 72.178125, 
    'increment': 77, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 72.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 73.178125, 
    'increment': 78, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 73.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 74.178125, 
    'increment': 79, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 74.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 75.178125, 
    'increment': 80, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 75.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 76.178125, 
    'increment': 81, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 76.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 77.178125, 
    'increment': 82, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 77.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 78.178125, 
    'increment': 83, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 78.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 79.178125, 
    'increment': 84, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 79.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 80.178125, 
    'increment': 85, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 80.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 81.178125, 
    'increment': 86, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 81.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 82.178125, 
    'increment': 87, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 82.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 83.178125, 
    'increment': 88, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 83.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 84.178125, 
    'increment': 89, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 84.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 85.178125, 
    'increment': 90, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 85.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 86.178125, 
    'increment': 91, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 86.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 87.178125, 
    'increment': 92, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 87.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 88.178125, 
    'increment': 93, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 88.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 89.178125, 
    'increment': 94, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 89.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 90.178125, 
    'increment': 95, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 90.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 91.178125, 
    'increment': 96, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 91.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 92.178125, 
    'increment': 97, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 92.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 93.178125, 
    'increment': 98, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 93.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 94.178125, 
    'increment': 99, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 94.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 95.178125, 
    'increment': 100, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 95.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 96.178125, 
    'increment': 101, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 96.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 97.178125, 
    'increment': 102, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 97.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 98.178125, 
    'increment': 103, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 98.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 99.178125, 
    'increment': 104, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 99.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 100.178125, 'increment': 105, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 100.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 101.178125, 'increment': 106, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 101.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 106, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 102.178125, 'increment': 107, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 102.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 107, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 103.178125, 'increment': 108, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 103.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 108, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 104.178125, 'increment': 109, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 104.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 109, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 105.178125, 'increment': 110, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 105.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 110, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 106.178125, 'increment': 111, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 106.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 111, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 107.178125, 'increment': 112, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 107.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 112, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 108.178125, 'increment': 113, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 108.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 113, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 109.178125, 'increment': 114, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 109.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 114, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 110.178125, 'increment': 115, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 110.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 115, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 111.178125, 'increment': 116, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 111.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 116, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 112.178125, 'increment': 117, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 112.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 117, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 113.178125, 'increment': 118, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 113.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 118, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 114.178125, 'increment': 119, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 114.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 119, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 115.178125, 'increment': 120, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 115.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 120, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 116.178125, 'increment': 121, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 116.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 121, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 117.178125, 'increment': 122, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 117.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 122, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 118.178125, 'increment': 123, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 118.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 123, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {
    'totalTime': 119.178125, 'increment': 124, 'attempts': 1, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'timeIncrement': 1.0, 'stepTime': 119.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 
    'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 124, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 125, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(STATUS, {'totalTime': 120.0, 
    'increment': 125, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.821875000000006, 'stepTime': 120.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComparisonRP', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparisonRP'})
mdb.jobs['Mk5StaticTestComparisonRP']._Message(JOB_COMPLETED, {
    'jobName': 'Mk5StaticTestComparisonRP', 
    'time': 'Tue Mar 23 00:27:37 2021'})
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.15)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.1203)
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-1'].resume()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].faces.getSequenceFromMask(
    ('[#0 #20000000 #8204 ]', ), ), name='Set-8')
mdb.models['Model-1'].EncastreBC(createStepName='Step-2', localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'])
mdb.models['Model-1'].constraints['Constraint-9'].suppress()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComparison2', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComparison2'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComparison2']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_BASEPLATE_PLAIN-1_BASEPLATE_PLAIN-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_M_SET-6 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_S_SET-5 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComparison2.odb', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 13928, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'memory': 1097.0, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 0.1, 
    'increment': 1, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 0.2, 
    'increment': 2, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.1, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 0.35, 
    'increment': 3, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.15, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 0.575, 
    'increment': 4, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.225, 'stepTime': 0.575, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 0.9125, 
    'increment': 5, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.3375, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 1.41875, 
    'increment': 6, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.50625, 'stepTime': 1.41875, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 2.178125, 
    'increment': 7, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.759375, 'stepTime': 2.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 3.178125, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 3.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 4.178125, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 4.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 5.178125, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 5.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 6.178125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 6.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 7.178125, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 7.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 8.178125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 8.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 9.178125, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 9.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 10.178125, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 10.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 11.178125, 
    'increment': 16, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 11.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 12.178125, 
    'increment': 17, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 12.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 13.178125, 
    'increment': 18, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 13.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 14.178125, 
    'increment': 19, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 14.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 15.178125, 
    'increment': 20, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 15.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 16.178125, 
    'increment': 21, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 16.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 17.178125, 
    'increment': 22, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 17.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 18.178125, 
    'increment': 23, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 18.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 19.178125, 
    'increment': 24, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 19.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 20.178125, 
    'increment': 25, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 20.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 21.178125, 
    'increment': 26, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 21.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 22.178125, 
    'increment': 27, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 22.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 23.178125, 
    'increment': 28, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 23.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 24.178125, 
    'increment': 29, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 24.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 25.178125, 
    'increment': 30, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 25.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 26.178125, 
    'increment': 31, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 26.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 27.178125, 
    'increment': 32, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 27.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 28.178125, 
    'increment': 33, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 28.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 29.178125, 
    'increment': 34, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 29.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 30.178125, 
    'increment': 35, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 30.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 31.178125, 
    'increment': 36, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 31.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 32.178125, 
    'increment': 37, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 32.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 33.178125, 
    'increment': 38, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 33.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 34.178125, 
    'increment': 39, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 34.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 35.178125, 
    'increment': 40, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 35.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 36.178125, 
    'increment': 41, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 36.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 37.178125, 
    'increment': 42, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 37.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 38.178125, 
    'increment': 43, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 38.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 39.178125, 
    'increment': 44, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 39.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 40.178125, 
    'increment': 45, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 40.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 41.178125, 
    'increment': 46, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 41.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 42.178125, 
    'increment': 47, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 42.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 43.178125, 
    'increment': 48, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 43.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 44.178125, 
    'increment': 49, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 44.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 45.178125, 
    'increment': 50, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 45.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 46.178125, 
    'increment': 51, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 46.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 47.178125, 
    'increment': 52, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 47.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 48.178125, 
    'increment': 53, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 48.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 49.178125, 
    'increment': 54, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 49.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 50.178125, 
    'increment': 55, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 50.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 51.178125, 
    'increment': 56, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 51.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 52.178125, 
    'increment': 57, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 52.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 53.178125, 
    'increment': 58, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 53.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 54.178125, 
    'increment': 59, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 54.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 55.178125, 
    'increment': 60, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 55.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 56.178125, 
    'increment': 61, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 56.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 57.178125, 
    'increment': 62, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 57.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 58.178125, 
    'increment': 63, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 58.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 59.178125, 
    'increment': 64, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 59.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 60.178125, 
    'increment': 65, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 60.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 61.178125, 
    'increment': 66, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 61.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 62.178125, 
    'increment': 67, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 62.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 63.178125, 
    'increment': 68, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 63.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 64.178125, 
    'increment': 69, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 64.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 65.178125, 
    'increment': 70, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 65.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 66.178125, 
    'increment': 71, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 66.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 67.178125, 
    'increment': 72, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 67.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 68.178125, 
    'increment': 73, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 68.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 69.178125, 
    'increment': 74, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 69.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 70.178125, 
    'increment': 75, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 70.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 71.178125, 
    'increment': 76, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 71.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 72.178125, 
    'increment': 77, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 72.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 73.178125, 
    'increment': 78, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 73.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 74.178125, 
    'increment': 79, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 74.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComparison2']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'Mk5StaticTestComparison2'})
mdb.jobs['Mk5StaticTestComparison2']._Message(STATUS, {'totalTime': 75.178125, 
    'increment': 80, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 75.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComparison2', 'severe': 0, 'equilibrium': 1})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].constraints['Constraint-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].loads['Load-1'].resume()
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComp3force', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComp3force'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComp3force']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\ABAQUS\\Mk5StaticTestComp3force.odb', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 57368, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Mk5StaticTestComp3force', 
    'memory': 1102.0})
mdb.jobs['Mk5StaticTestComp3force']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 0.35, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 1.41875, 
    'attempts': 1, 'timeIncrement': 0.50625, 'increment': 6, 
    'stepTime': 1.41875, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 2.178125, 
    'attempts': 1, 'timeIncrement': 0.759375, 'increment': 7, 
    'stepTime': 2.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 3.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 'stepTime': 3.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 4.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 'stepTime': 4.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 5.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 10, 'stepTime': 5.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 6.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 11, 'stepTime': 6.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 7.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 12, 'stepTime': 7.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 8.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 13, 'stepTime': 8.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 9.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 14, 'stepTime': 9.178125, 
    'step': 1, 'jobName': 'Mk5StaticTestComp3force', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 10.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 15, 
    'stepTime': 10.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 11.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 16, 
    'stepTime': 11.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 12.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 17, 
    'stepTime': 12.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 13.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 18, 
    'stepTime': 13.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 14.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 19, 
    'stepTime': 14.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 15.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 20, 
    'stepTime': 15.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 16.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 21, 
    'stepTime': 16.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 17.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 22, 
    'stepTime': 17.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 18.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 23, 
    'stepTime': 18.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 19.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 24, 
    'stepTime': 19.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 20.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 25, 
    'stepTime': 20.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 21.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 26, 
    'stepTime': 21.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 22.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 27, 
    'stepTime': 22.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 23.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 28, 
    'stepTime': 23.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 24.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 29, 
    'stepTime': 24.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 25.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 30, 
    'stepTime': 25.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 26.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 31, 
    'stepTime': 26.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 27.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 32, 
    'stepTime': 27.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 28.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 33, 
    'stepTime': 28.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 29.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 34, 
    'stepTime': 29.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 30.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 35, 
    'stepTime': 30.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 31.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 36, 
    'stepTime': 31.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 32.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 37, 
    'stepTime': 32.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 33.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 38, 
    'stepTime': 33.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 34.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 39, 
    'stepTime': 34.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 35.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 40, 
    'stepTime': 35.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 36.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 41, 
    'stepTime': 36.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 37.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 42, 
    'stepTime': 37.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 38.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 43, 
    'stepTime': 38.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 39.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 44, 
    'stepTime': 39.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 40.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 45, 
    'stepTime': 40.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 41.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 46, 
    'stepTime': 41.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 42.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 47, 
    'stepTime': 42.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 43.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 48, 
    'stepTime': 43.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 44.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 49, 
    'stepTime': 44.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 45.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 50, 
    'stepTime': 45.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 46.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 51, 
    'stepTime': 46.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 47.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 52, 
    'stepTime': 47.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 48.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 53, 
    'stepTime': 48.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 49.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 54, 
    'stepTime': 49.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 50.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 55, 
    'stepTime': 50.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 51.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 56, 
    'stepTime': 51.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 52.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 57, 
    'stepTime': 52.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 53.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 58, 
    'stepTime': 53.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 54.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 59, 
    'stepTime': 54.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 55.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 60, 
    'stepTime': 55.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 56.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 61, 
    'stepTime': 56.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 57.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 62, 
    'stepTime': 57.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 58.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 63, 
    'stepTime': 58.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 59.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 64, 
    'stepTime': 59.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 60.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 65, 
    'stepTime': 60.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 61.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 66, 
    'stepTime': 61.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 62.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 67, 
    'stepTime': 62.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 63.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 68, 
    'stepTime': 63.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 64.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 69, 
    'stepTime': 64.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 65.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 70, 
    'stepTime': 65.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 66.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 71, 
    'stepTime': 66.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 67.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 72, 
    'stepTime': 67.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 68.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 73, 
    'stepTime': 68.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 69.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 74, 
    'stepTime': 69.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 70.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 75, 
    'stepTime': 70.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 71.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 76, 
    'stepTime': 71.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 72.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 77, 
    'stepTime': 72.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 73.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 78, 
    'stepTime': 73.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 74.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 79, 
    'stepTime': 74.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 75.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 80, 
    'stepTime': 75.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 76.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 81, 
    'stepTime': 76.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 77.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 82, 
    'stepTime': 77.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 78.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 83, 
    'stepTime': 78.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 79.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 84, 
    'stepTime': 79.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 80.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 85, 
    'stepTime': 80.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 81.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 86, 
    'stepTime': 81.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 82.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 87, 
    'stepTime': 82.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 83.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 88, 
    'stepTime': 83.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 84.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 89, 
    'stepTime': 84.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 85.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 90, 
    'stepTime': 85.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 86.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 91, 
    'stepTime': 86.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 87.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 92, 
    'stepTime': 87.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 88.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 93, 
    'stepTime': 88.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 89.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 94, 
    'stepTime': 89.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 90.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 95, 
    'stepTime': 90.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 91.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 96, 
    'stepTime': 91.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 92.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 97, 
    'stepTime': 92.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 93.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 98, 
    'stepTime': 93.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 94.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 99, 
    'stepTime': 94.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 95.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 100, 
    'stepTime': 95.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 96.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 101, 
    'stepTime': 96.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 97.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 102, 
    'stepTime': 97.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 98.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 103, 
    'stepTime': 98.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 99.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 104, 
    'stepTime': 99.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 100.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 105, 
    'stepTime': 100.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 101.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 106, 
    'stepTime': 101.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 106, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 102.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 107, 
    'stepTime': 102.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 107, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 103.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 108, 
    'stepTime': 103.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 108, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 104.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 109, 
    'stepTime': 104.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 109, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 105.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 110, 
    'stepTime': 105.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 110, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 106.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 111, 
    'stepTime': 106.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 111, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 107.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 112, 
    'stepTime': 107.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 112, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 108.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 113, 
    'stepTime': 108.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 113, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 109.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 114, 
    'stepTime': 109.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 114, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 110.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 115, 
    'stepTime': 110.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 115, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 111.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 116, 
    'stepTime': 111.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 116, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 112.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 117, 
    'stepTime': 112.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 117, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 113.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 118, 
    'stepTime': 113.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 118, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 114.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 119, 
    'stepTime': 114.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 119, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 115.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 120, 
    'stepTime': 115.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 120, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 116.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 121, 
    'stepTime': 116.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 121, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 117.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 122, 
    'stepTime': 117.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 122, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 118.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 123, 
    'stepTime': 118.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 123, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 119.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 124, 
    'stepTime': 119.178125, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 124, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 125, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(STATUS, {'totalTime': 120.0, 
    'attempts': 1, 'timeIncrement': 0.821875000000006, 'increment': 125, 
    'stepTime': 120.0, 'step': 1, 'jobName': 'Mk5StaticTestComp3force', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3force']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3force'})
mdb.jobs['Mk5StaticTestComp3force']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:11:11 2021', 'jobName': 'Mk5StaticTestComp3force'})
# Save by js214 on 2021_03_23-01.12.29; build 2019 2018_09_24-14.41.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].constraints['Constraint-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Mk5StaticTestComp3forceencastlegs', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['Mk5StaticTestComp3forceencastlegs'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_BASEPLATE_PLAIN-1_BASEPLATE_PLAIN-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_M_SET-6 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_S_SET-5 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComp3forceencastlegs.odb', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 46264, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'memory': 1098.0})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.1, 'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 
    'stepTime': 0.1, 'step': 1, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.2, 'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 
    'stepTime': 0.2, 'step': 1, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.35, 'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 
    'stepTime': 0.35, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.575, 'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 
    'stepTime': 0.575, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.9125, 'attempts': 1, 'timeIncrement': 0.3375, 
    'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 1.41875, 'attempts': 1, 'timeIncrement': 0.50625, 
    'increment': 6, 'stepTime': 1.41875, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 2.178125, 'attempts': 1, 'timeIncrement': 0.759375, 
    'increment': 7, 'stepTime': 2.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 3.178125, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 
    'stepTime': 3.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 4.178125, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 
    'stepTime': 4.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 5.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 10, 'stepTime': 5.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 6.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 11, 'stepTime': 6.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 7.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 12, 'stepTime': 7.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 8.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 13, 'stepTime': 8.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 9.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 14, 'stepTime': 9.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 10.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 15, 'stepTime': 10.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 11.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 16, 'stepTime': 11.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 12.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 17, 'stepTime': 12.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 13.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 18, 'stepTime': 13.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 14.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 19, 'stepTime': 14.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 15.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 20, 'stepTime': 15.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 16.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 21, 'stepTime': 16.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 17.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 22, 'stepTime': 17.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 18.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 23, 'stepTime': 18.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 19.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 24, 'stepTime': 19.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 20.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 25, 'stepTime': 20.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 21.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 26, 'stepTime': 21.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 22.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 27, 'stepTime': 22.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 23.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 28, 'stepTime': 23.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 24.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 29, 'stepTime': 24.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 25.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 30, 'stepTime': 25.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 26.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 31, 'stepTime': 26.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 27.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 32, 'stepTime': 27.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 28.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 33, 'stepTime': 28.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 29.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 34, 'stepTime': 29.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 30.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 35, 'stepTime': 30.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 31.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 36, 'stepTime': 31.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 32.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 37, 'stepTime': 32.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 33.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 38, 'stepTime': 33.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 34.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 39, 'stepTime': 34.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 35.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 40, 'stepTime': 35.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 36.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 41, 'stepTime': 36.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 37.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 42, 'stepTime': 37.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 38.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 43, 'stepTime': 38.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 39.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 44, 'stepTime': 39.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 40.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 45, 'stepTime': 40.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 41.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 46, 'stepTime': 41.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 42.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 47, 'stepTime': 42.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 43.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 48, 'stepTime': 43.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 44.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 49, 'stepTime': 44.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 45.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 50, 'stepTime': 45.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 46.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 51, 'stepTime': 46.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 47.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 52, 'stepTime': 47.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 48.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 53, 'stepTime': 48.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 49.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 54, 'stepTime': 49.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 50.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 55, 'stepTime': 50.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 51.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 56, 'stepTime': 51.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 52.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 57, 'stepTime': 52.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 53.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 58, 'stepTime': 53.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 54.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 59, 'stepTime': 54.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 55.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 60, 'stepTime': 55.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 56.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 61, 'stepTime': 56.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 57.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 62, 'stepTime': 57.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 58.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 63, 'stepTime': 58.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 59.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 64, 'stepTime': 59.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 60.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 65, 'stepTime': 60.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 61.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 66, 'stepTime': 61.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 62.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 67, 'stepTime': 62.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 63.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 68, 'stepTime': 63.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 64.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 69, 'stepTime': 64.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 65.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 70, 'stepTime': 65.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 66.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 71, 'stepTime': 66.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 67.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 72, 'stepTime': 67.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 68.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 73, 'stepTime': 68.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 69.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 74, 'stepTime': 69.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 70.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 75, 'stepTime': 70.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 71.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 76, 'stepTime': 71.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 72.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 77, 'stepTime': 72.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 73.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 78, 'stepTime': 73.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 74.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 79, 'stepTime': 74.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 75.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 80, 'stepTime': 75.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 76.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 81, 'stepTime': 76.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 77.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 82, 'stepTime': 77.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 78.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 83, 'stepTime': 78.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 79.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 84, 'stepTime': 79.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 80.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 85, 'stepTime': 80.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 81.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 86, 'stepTime': 81.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 82.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 87, 'stepTime': 82.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 83.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 88, 'stepTime': 83.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 84.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 89, 'stepTime': 84.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 85.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 90, 'stepTime': 85.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 86.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 91, 'stepTime': 86.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 87.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 92, 'stepTime': 87.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 88.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 93, 'stepTime': 88.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 89.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 94, 'stepTime': 89.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 90.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 95, 'stepTime': 90.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 91.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 96, 'stepTime': 91.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 92.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 97, 'stepTime': 92.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 93.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 98, 'stepTime': 93.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 94.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 99, 'stepTime': 94.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 95.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 100, 'stepTime': 95.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 96.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 101, 'stepTime': 96.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 97.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 102, 'stepTime': 97.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 98.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 103, 'stepTime': 98.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 99.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 104, 'stepTime': 99.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 100.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 105, 'stepTime': 100.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 101.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 106, 'stepTime': 101.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 106, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 102.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 107, 'stepTime': 102.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 107, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 103.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 108, 'stepTime': 103.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 108, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 104.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 109, 'stepTime': 104.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 109, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 105.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 110, 'stepTime': 105.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 110, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 106.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 111, 'stepTime': 106.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 111, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 107.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 112, 'stepTime': 107.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 112, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 108.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 113, 'stepTime': 108.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 113, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 109.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 114, 'stepTime': 109.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 114, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 110.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 115, 'stepTime': 110.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 115, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 111.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 116, 'stepTime': 111.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 116, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 112.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 117, 'stepTime': 112.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 117, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 113.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 118, 'stepTime': 113.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 118, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 114.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 119, 'stepTime': 114.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 119, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 115.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 120, 'stepTime': 115.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 120, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 116.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 121, 'stepTime': 116.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 121, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 117.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 122, 'stepTime': 117.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 122, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 118.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 123, 'stepTime': 118.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 123, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 119.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 124, 'stepTime': 119.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 124, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 125, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 120.0, 'attempts': 1, 'timeIncrement': 0.821875000000006, 
    'increment': 125, 'stepTime': 120.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:17:32 2021', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.jobs['Mk5StaticTestComp3forceencastlegs'].submit(consistencyChecking=OFF)
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_BASEPLATE_PLAIN-1_BASEPLATE_PLAIN-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_M_SET-6 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_S_SET-5 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\Mk5StaticTestComp3forceencastlegs.odb', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-7050F5S', 'handle': 57440, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'memory': 1099.0})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.1, 'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 
    'stepTime': 0.1, 'step': 1, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.2, 'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 
    'stepTime': 0.2, 'step': 1, 'jobName': 'Mk5StaticTestComp3forceencastlegs', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.35, 'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 
    'stepTime': 0.35, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.575, 'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 
    'stepTime': 0.575, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 0.9125, 'attempts': 1, 'timeIncrement': 0.3375, 
    'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 1.41875, 'attempts': 1, 'timeIncrement': 0.50625, 
    'increment': 6, 'stepTime': 1.41875, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 2.178125, 'attempts': 1, 'timeIncrement': 0.759375, 
    'increment': 7, 'stepTime': 2.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 3.178125, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 
    'stepTime': 3.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 4.178125, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 
    'stepTime': 4.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 5.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 10, 'stepTime': 5.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 6.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 11, 'stepTime': 6.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 7.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 12, 'stepTime': 7.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 8.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 13, 'stepTime': 8.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 9.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 14, 'stepTime': 9.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 10.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 15, 'stepTime': 10.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 11.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 16, 'stepTime': 11.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 12.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 17, 'stepTime': 12.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 13.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 18, 'stepTime': 13.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 14.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 19, 'stepTime': 14.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 15.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 20, 'stepTime': 15.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 16.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 21, 'stepTime': 16.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 17.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 22, 'stepTime': 17.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 18.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 23, 'stepTime': 18.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 19.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 24, 'stepTime': 19.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 20.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 25, 'stepTime': 20.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 21.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 26, 'stepTime': 21.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 22.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 27, 'stepTime': 22.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 23.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 28, 'stepTime': 23.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 24.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 29, 'stepTime': 24.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 25.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 30, 'stepTime': 25.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 26.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 31, 'stepTime': 26.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 27.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 32, 'stepTime': 27.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 28.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 33, 'stepTime': 28.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 29.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 34, 'stepTime': 29.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 30.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 35, 'stepTime': 30.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 31.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 36, 'stepTime': 31.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 32.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 37, 'stepTime': 32.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 33.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 38, 'stepTime': 33.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 34.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 39, 'stepTime': 34.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 35.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 40, 'stepTime': 35.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 36.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 41, 'stepTime': 36.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 37.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 42, 'stepTime': 37.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 38.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 43, 'stepTime': 38.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 39.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 44, 'stepTime': 39.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 40.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 45, 'stepTime': 40.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 41.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 46, 'stepTime': 41.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 42.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 47, 'stepTime': 42.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 43.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 48, 'stepTime': 43.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 44.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 49, 'stepTime': 44.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 45.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 50, 'stepTime': 45.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 46.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 51, 'stepTime': 46.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 47.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 52, 'stepTime': 47.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 48.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 53, 'stepTime': 48.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 49.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 54, 'stepTime': 49.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 50.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 55, 'stepTime': 50.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 51.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 56, 'stepTime': 51.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 52.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 57, 'stepTime': 52.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 53.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 58, 'stepTime': 53.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 54.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 59, 'stepTime': 54.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 55.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 60, 'stepTime': 55.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 56.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 61, 'stepTime': 56.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 57.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 62, 'stepTime': 57.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 58.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 63, 'stepTime': 58.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 59.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 64, 'stepTime': 59.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 60.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 65, 'stepTime': 60.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 61.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 66, 'stepTime': 61.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 62.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 67, 'stepTime': 62.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 63.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 68, 'stepTime': 63.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 64.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 69, 'stepTime': 64.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 65.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 70, 'stepTime': 65.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 66.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 71, 'stepTime': 66.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 67.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 72, 'stepTime': 67.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 68.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 73, 'stepTime': 68.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 69.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 74, 'stepTime': 69.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 70.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 75, 'stepTime': 70.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 71.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 76, 'stepTime': 71.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 72.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 77, 'stepTime': 72.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 73.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 78, 'stepTime': 73.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 74.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 79, 'stepTime': 74.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 75.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 80, 'stepTime': 75.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 76.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 81, 'stepTime': 76.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 77.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 82, 'stepTime': 77.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 78.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 83, 'stepTime': 78.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 79.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 84, 'stepTime': 79.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 80.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 85, 'stepTime': 80.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 81.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 86, 'stepTime': 81.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 82.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 87, 'stepTime': 82.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 83.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 88, 'stepTime': 83.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 84.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 89, 'stepTime': 84.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 85.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 90, 'stepTime': 85.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 86.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 91, 'stepTime': 86.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 87.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 92, 'stepTime': 87.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 88.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 93, 'stepTime': 88.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 89.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 94, 'stepTime': 89.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 90.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 95, 'stepTime': 90.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 91.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 96, 'stepTime': 91.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 92.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 97, 'stepTime': 92.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 93.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 98, 'stepTime': 93.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 94.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 99, 'stepTime': 94.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 95.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 100, 'stepTime': 95.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 96.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 101, 'stepTime': 96.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 97.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 102, 'stepTime': 97.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 98.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 103, 'stepTime': 98.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 99.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 104, 'stepTime': 99.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 100.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 105, 'stepTime': 100.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 101.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 106, 'stepTime': 101.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 106, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 102.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 107, 'stepTime': 102.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 107, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 103.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 108, 'stepTime': 103.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 108, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 104.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 109, 'stepTime': 104.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 109, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 105.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 110, 'stepTime': 105.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 110, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 106.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 111, 'stepTime': 106.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 111, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 107.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 112, 'stepTime': 107.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 112, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 108.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 113, 'stepTime': 108.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 113, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 109.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 114, 'stepTime': 109.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 114, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 110.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 115, 'stepTime': 110.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 115, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 111.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 116, 'stepTime': 111.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 116, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 112.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 117, 'stepTime': 112.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 117, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 113.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 118, 'stepTime': 113.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 118, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 114.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 119, 'stepTime': 114.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 119, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 115.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 120, 'stepTime': 115.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 120, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 116.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 121, 'stepTime': 116.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 121, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 117.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 122, 'stepTime': 117.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 122, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 118.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 123, 'stepTime': 118.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 123, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 119.178125, 'attempts': 1, 'timeIncrement': 1.0, 
    'increment': 124, 'stepTime': 119.178125, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 124, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 125, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(STATUS, {
    'totalTime': 120.0, 'attempts': 1, 'timeIncrement': 0.821875000000006, 
    'increment': 125, 'stepTime': 120.0, 'step': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.jobs['Mk5StaticTestComp3forceencastlegs']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:25:41 2021', 
    'jobName': 'Mk5StaticTestComp3forceencastlegs'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-2'].resume()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='StaticTimeTest1', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['Model-1'].steps['Step-2'].setValues(minInc=1e-05, timePeriod=1.0)
mdb.jobs['StaticTimeTest1'].submit(consistencyChecking=OFF)
mdb.jobs['StaticTimeTest1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_BASEPLATE_PLAIN-1_BASEPLATE_PLAIN-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_M_SET-6 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_S_SET-5 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\StaticTimeTest1.odb', 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 56928, 
    'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'StaticTimeTest1', 'memory': 1099.0})
mdb.jobs['StaticTimeTest1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(MINIMUM_MEMORY, {'minimum_memory': 187.0, 
    'phase': STANDARD_PHASE, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'StaticTimeTest1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest1']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTimeTest1'})
mdb.jobs['StaticTimeTest1']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:28:15 2021', 'jobName': 'StaticTimeTest1'})
mdb.models['Model-1'].steps['Step-2'].setValues(maxInc=1.0, minInc=0.001, 
    timePeriod=100.0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='StaticTimeTest2', nodalOutputPrecision=
    SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['StaticTimeTest2'].submit(consistencyChecking=OFF)
# Save by js214 on 2021_03_23-01.35.30; build 2019 2018_09_24-14.41.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['StaticTimeTest2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_BASEPLATE_PLAIN-1_BASEPLATE_PLAIN-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_M_SET-6 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_S_SET-5 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\StaticTimeTest2.odb', 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 47548, 
    'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'StaticTimeTest2', 'memory': 1098.0})
mdb.jobs['StaticTimeTest2']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(MINIMUM_MEMORY, {'minimum_memory': 187.0, 
    'phase': STANDARD_PHASE, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 1.41875, 
    'attempts': 1, 'timeIncrement': 0.50625, 'increment': 6, 
    'stepTime': 1.41875, 'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 2.178125, 
    'attempts': 1, 'timeIncrement': 0.759375, 'increment': 7, 
    'stepTime': 2.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 3.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 'stepTime': 3.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 4.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 'stepTime': 4.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 5.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 10, 'stepTime': 5.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 6.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 11, 'stepTime': 6.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 11, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 7.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 12, 'stepTime': 7.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 12, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 8.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 13, 'stepTime': 8.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 13, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 9.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 14, 'stepTime': 9.178125, 
    'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 14, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 10.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 15, 
    'stepTime': 10.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 15, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 11.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 16, 
    'stepTime': 11.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 16, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 12.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 17, 
    'stepTime': 12.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 17, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 13.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 18, 
    'stepTime': 13.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 18, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 14.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 19, 
    'stepTime': 14.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 19, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 15.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 20, 
    'stepTime': 15.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 20, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 16.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 21, 
    'stepTime': 16.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 21, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 17.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 22, 
    'stepTime': 17.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 22, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 18.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 23, 
    'stepTime': 18.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 23, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 19.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 24, 
    'stepTime': 19.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 24, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 20.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 25, 
    'stepTime': 20.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 25, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 21.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 26, 
    'stepTime': 21.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 26, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 22.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 27, 
    'stepTime': 22.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 27, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 23.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 28, 
    'stepTime': 23.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 28, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 24.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 29, 
    'stepTime': 24.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 29, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 25.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 30, 
    'stepTime': 25.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 30, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 26.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 31, 
    'stepTime': 26.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 31, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 27.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 32, 
    'stepTime': 27.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 32, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 28.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 33, 
    'stepTime': 28.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 33, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 29.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 34, 
    'stepTime': 29.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 34, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 30.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 35, 
    'stepTime': 30.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 35, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 31.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 36, 
    'stepTime': 31.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 36, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 32.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 37, 
    'stepTime': 32.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 37, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 33.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 38, 
    'stepTime': 33.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 38, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 34.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 39, 
    'stepTime': 34.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 39, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 35.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 40, 
    'stepTime': 35.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 40, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 36.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 41, 
    'stepTime': 36.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 41, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 37.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 42, 
    'stepTime': 37.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 42, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 38.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 43, 
    'stepTime': 38.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 43, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 39.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 44, 
    'stepTime': 39.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 44, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 40.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 45, 
    'stepTime': 40.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 45, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 41.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 46, 
    'stepTime': 41.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 46, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 42.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 47, 
    'stepTime': 42.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 47, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 43.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 48, 
    'stepTime': 43.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 48, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 44.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 49, 
    'stepTime': 44.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 49, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 45.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 50, 
    'stepTime': 45.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 50, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 46.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 51, 
    'stepTime': 46.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 51, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 47.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 52, 
    'stepTime': 47.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 52, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 48.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 53, 
    'stepTime': 48.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 53, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 49.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 54, 
    'stepTime': 49.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 54, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 50.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 55, 
    'stepTime': 50.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 55, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 51.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 56, 
    'stepTime': 51.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 56, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 52.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 57, 
    'stepTime': 52.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 57, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 53.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 58, 
    'stepTime': 53.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 58, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 54.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 59, 
    'stepTime': 54.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 59, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 55.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 60, 
    'stepTime': 55.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 60, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 56.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 61, 
    'stepTime': 56.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 61, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 57.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 62, 
    'stepTime': 57.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 62, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 58.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 63, 
    'stepTime': 58.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 63, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 59.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 64, 
    'stepTime': 59.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 64, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 60.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 65, 
    'stepTime': 60.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 65, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 61.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 66, 
    'stepTime': 61.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 66, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 62.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 67, 
    'stepTime': 62.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 67, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 63.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 68, 
    'stepTime': 63.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 68, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 64.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 69, 
    'stepTime': 64.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 69, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 65.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 70, 
    'stepTime': 65.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 70, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 66.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 71, 
    'stepTime': 66.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 71, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 67.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 72, 
    'stepTime': 67.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 72, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 68.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 73, 
    'stepTime': 68.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 73, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 69.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 74, 
    'stepTime': 69.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 74, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 70.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 75, 
    'stepTime': 70.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 75, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 71.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 76, 
    'stepTime': 71.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 76, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 72.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 77, 
    'stepTime': 72.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 77, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 73.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 78, 
    'stepTime': 73.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 78, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 74.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 79, 
    'stepTime': 74.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 79, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 75.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 80, 
    'stepTime': 75.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 80, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 76.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 81, 
    'stepTime': 76.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 81, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 77.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 82, 
    'stepTime': 77.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 82, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 78.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 83, 
    'stepTime': 78.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 83, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 79.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 84, 
    'stepTime': 79.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 84, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 80.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 85, 
    'stepTime': 80.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 85, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 81.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 86, 
    'stepTime': 81.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 86, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 82.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 87, 
    'stepTime': 82.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 87, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 83.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 88, 
    'stepTime': 83.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 88, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 84.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 89, 
    'stepTime': 84.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 89, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 85.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 90, 
    'stepTime': 85.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 90, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 86.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 91, 
    'stepTime': 86.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 91, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 87.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 92, 
    'stepTime': 87.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 92, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 88.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 93, 
    'stepTime': 88.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 93, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 89.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 94, 
    'stepTime': 89.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 94, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 90.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 95, 
    'stepTime': 90.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 95, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 91.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 96, 
    'stepTime': 91.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 96, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 92.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 97, 
    'stepTime': 92.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 97, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 93.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 98, 
    'stepTime': 93.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 98, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 94.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 99, 
    'stepTime': 94.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 99, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 95.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 100, 
    'stepTime': 95.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 100, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 96.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 101, 
    'stepTime': 96.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 101, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 97.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 102, 
    'stepTime': 97.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 102, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 98.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 103, 
    'stepTime': 98.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 103, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 99.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 104, 
    'stepTime': 99.178125, 'step': 1, 'jobName': 'StaticTimeTest2', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 104, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 105, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(STATUS, {'totalTime': 100.0, 
    'attempts': 1, 'timeIncrement': 0.821875000000006, 'increment': 105, 
    'stepTime': 100.0, 'step': 1, 'jobName': 'StaticTimeTest2', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTimeTest2']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTimeTest2'})
mdb.jobs['StaticTimeTest2']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:38:48 2021', 'jobName': 'StaticTimeTest2'})
mdb.models['Model-1'].constraints['Constraint-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.06)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='StaticComparisonRound5', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['StaticComparisonRound5'].submit(consistencyChecking=OFF)
mdb.jobs['StaticComparisonRound5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\StaticComparisonRound5.odb', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 33968, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'StaticComparisonRound5', 
    'memory': 1103.0})
mdb.jobs['StaticComparisonRound5']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.35, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 1.41875, 
    'attempts': 1, 'timeIncrement': 0.50625, 'increment': 6, 
    'stepTime': 1.41875, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 2.178125, 
    'attempts': 1, 'timeIncrement': 0.759375, 'increment': 7, 
    'stepTime': 2.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 3.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 'stepTime': 3.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 4.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 'stepTime': 4.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 5.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 10, 'stepTime': 5.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 6.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 11, 'stepTime': 6.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 7.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 12, 'stepTime': 7.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 8.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 13, 'stepTime': 8.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 9.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 14, 'stepTime': 9.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 10.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 15, 
    'stepTime': 10.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 11.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 16, 
    'stepTime': 11.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 12.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 17, 
    'stepTime': 12.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 13.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 18, 
    'stepTime': 13.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 14.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 19, 
    'stepTime': 14.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 15.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 20, 
    'stepTime': 15.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 16.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 21, 
    'stepTime': 16.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 17.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 22, 
    'stepTime': 17.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 18.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 23, 
    'stepTime': 18.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 19.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 24, 
    'stepTime': 19.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 20.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 25, 
    'stepTime': 20.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 21.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 26, 
    'stepTime': 21.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 22.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 27, 
    'stepTime': 22.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 23.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 28, 
    'stepTime': 23.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 24.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 29, 
    'stepTime': 24.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 25.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 30, 
    'stepTime': 25.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 26.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 31, 
    'stepTime': 26.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 27.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 32, 
    'stepTime': 27.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 28.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 33, 
    'stepTime': 28.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 29.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 34, 
    'stepTime': 29.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 30.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 35, 
    'stepTime': 30.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 31.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 36, 
    'stepTime': 31.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 32.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 37, 
    'stepTime': 32.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 33.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 38, 
    'stepTime': 33.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 34.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 39, 
    'stepTime': 34.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 35.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 40, 
    'stepTime': 35.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 36.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 41, 
    'stepTime': 36.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 37.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 42, 
    'stepTime': 37.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 38.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 43, 
    'stepTime': 38.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 39.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 44, 
    'stepTime': 39.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 40.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 45, 
    'stepTime': 40.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 41.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 46, 
    'stepTime': 41.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 42.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 47, 
    'stepTime': 42.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 43.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 48, 
    'stepTime': 43.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 44.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 49, 
    'stepTime': 44.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 45.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 50, 
    'stepTime': 45.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 46.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 51, 
    'stepTime': 46.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 47.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 52, 
    'stepTime': 47.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 48.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 53, 
    'stepTime': 48.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 49.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 54, 
    'stepTime': 49.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 50.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 55, 
    'stepTime': 50.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 51.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 56, 
    'stepTime': 51.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 52.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 57, 
    'stepTime': 52.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 53.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 58, 
    'stepTime': 53.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 54.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 59, 
    'stepTime': 54.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 55.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 60, 
    'stepTime': 55.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 56.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 61, 
    'stepTime': 56.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 57.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 62, 
    'stepTime': 57.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 58.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 63, 
    'stepTime': 58.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 59.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 64, 
    'stepTime': 59.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 60.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 65, 
    'stepTime': 60.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 61.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 66, 
    'stepTime': 61.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 62.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 67, 
    'stepTime': 62.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 63.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 68, 
    'stepTime': 63.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 64.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 69, 
    'stepTime': 64.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 65.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 70, 
    'stepTime': 65.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 66.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 71, 
    'stepTime': 66.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 67.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 72, 
    'stepTime': 67.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 68.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 73, 
    'stepTime': 68.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 69.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 74, 
    'stepTime': 69.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 70.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 75, 
    'stepTime': 70.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 71.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 76, 
    'stepTime': 71.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 72.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 77, 
    'stepTime': 72.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 73.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 78, 
    'stepTime': 73.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 74.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 79, 
    'stepTime': 74.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 75.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 80, 
    'stepTime': 75.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 76.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 81, 
    'stepTime': 76.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 77.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 82, 
    'stepTime': 77.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 78.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 83, 
    'stepTime': 78.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 79.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 84, 
    'stepTime': 79.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 80.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 85, 
    'stepTime': 80.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 81.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 86, 
    'stepTime': 81.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 82.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 87, 
    'stepTime': 82.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 83.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 88, 
    'stepTime': 83.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 84.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 89, 
    'stepTime': 84.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 85.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 90, 
    'stepTime': 85.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 86.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 91, 
    'stepTime': 86.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 87.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 92, 
    'stepTime': 87.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 88.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 93, 
    'stepTime': 88.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 89.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 94, 
    'stepTime': 89.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 90.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 95, 
    'stepTime': 90.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 91.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 96, 
    'stepTime': 91.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 92.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 97, 
    'stepTime': 92.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 93.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 98, 
    'stepTime': 93.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 94.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 99, 
    'stepTime': 94.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 95.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 100, 
    'stepTime': 95.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 96.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 101, 
    'stepTime': 96.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 97.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 102, 
    'stepTime': 97.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 98.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 103, 
    'stepTime': 98.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 99.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 104, 
    'stepTime': 99.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 100.0, 
    'attempts': 1, 'timeIncrement': 0.821875000000006, 'increment': 105, 
    'stepTime': 100.0, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:53:22 2021', 'jobName': 'StaticComparisonRound5'})
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=PINNED)
mdb.jobs['StaticComparisonRound5'].submit(consistencyChecking=OFF)
mdb.jobs['StaticComparisonRound5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '23 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '35 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\StaticComparisonRound5.odb', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 46644, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'StaticComparisonRound5', 
    'memory': 1102.0})
mdb.jobs['StaticComparisonRound5']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.35, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 1.41875, 
    'attempts': 1, 'timeIncrement': 0.50625, 'increment': 6, 
    'stepTime': 1.41875, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 2.178125, 
    'attempts': 1, 'timeIncrement': 0.759375, 'increment': 7, 
    'stepTime': 2.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 3.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 8, 'stepTime': 3.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 4.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 9, 'stepTime': 4.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 5.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 10, 'stepTime': 5.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 10, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 6.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 11, 'stepTime': 6.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 11, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 7.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 12, 'stepTime': 7.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 12, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 8.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 13, 'stepTime': 8.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 13, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 9.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 14, 'stepTime': 9.178125, 
    'step': 1, 'jobName': 'StaticComparisonRound5', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 14, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 10.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 15, 
    'stepTime': 10.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 15, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 11.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 16, 
    'stepTime': 11.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 16, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 12.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 17, 
    'stepTime': 12.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 17, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 13.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 18, 
    'stepTime': 13.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 18, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 14.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 19, 
    'stepTime': 14.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 19, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 15.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 20, 
    'stepTime': 15.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 20, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 16.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 21, 
    'stepTime': 16.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 21, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 17.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 22, 
    'stepTime': 17.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 22, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 18.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 23, 
    'stepTime': 18.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 23, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 19.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 24, 
    'stepTime': 19.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 24, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 20.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 25, 
    'stepTime': 20.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 25, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 21.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 26, 
    'stepTime': 21.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 26, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 22.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 27, 
    'stepTime': 22.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 27, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 23.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 28, 
    'stepTime': 23.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 28, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 24.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 29, 
    'stepTime': 24.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 29, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 25.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 30, 
    'stepTime': 25.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 30, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 26.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 31, 
    'stepTime': 26.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 31, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 27.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 32, 
    'stepTime': 27.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 32, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 28.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 33, 
    'stepTime': 28.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 33, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 29.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 34, 
    'stepTime': 29.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 34, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 30.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 35, 
    'stepTime': 30.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 35, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 31.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 36, 
    'stepTime': 31.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 36, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 32.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 37, 
    'stepTime': 32.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 37, 
    'jobName': 'StaticComparisonRound5'})
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 33.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 38, 
    'stepTime': 33.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 38, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 34.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 39, 
    'stepTime': 34.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 39, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 35.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 40, 
    'stepTime': 35.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 40, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 36.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 41, 
    'stepTime': 36.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 41, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 37.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 42, 
    'stepTime': 37.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 42, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 38.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 43, 
    'stepTime': 38.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 43, 
    'jobName': 'StaticComparisonRound5'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-9', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Baseplate_Plain-1'].referencePoints[33], 
    ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-9'], u1=UNSET, 
    u2=0.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 39.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 44, 
    'stepTime': 39.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 44, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 40.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 45, 
    'stepTime': 40.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 45, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 41.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 46, 
    'stepTime': 41.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 46, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 42.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 47, 
    'stepTime': 42.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 47, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 43.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 48, 
    'stepTime': 43.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 48, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 44.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 49, 
    'stepTime': 44.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 49, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 45.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 50, 
    'stepTime': 45.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 50, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 46.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 51, 
    'stepTime': 46.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 51, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 47.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 52, 
    'stepTime': 47.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 52, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 48.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 53, 
    'stepTime': 48.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 53, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 49.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 54, 
    'stepTime': 49.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 54, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 50.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 55, 
    'stepTime': 50.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 55, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 51.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 56, 
    'stepTime': 51.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 56, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 52.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 57, 
    'stepTime': 52.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 57, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 53.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 58, 
    'stepTime': 53.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 58, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 54.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 59, 
    'stepTime': 54.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 59, 
    'jobName': 'StaticComparisonRound5'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_2-1'].faces.getSequenceFromMask(
    mask=('[#80020100 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Rail_3-1'].faces.getSequenceFromMask(
    mask=('[#10004 #8000 ]', ), ), name='Set-10')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-6', region=mdb.models['Model-1'].rootAssembly.sets['Set-10'], u1=UNSET, 
    u2=UNSET, u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 55.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 60, 
    'stepTime': 55.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 60, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 56.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 61, 
    'stepTime': 56.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 61, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 57.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 62, 
    'stepTime': 57.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 62, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 58.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 63, 
    'stepTime': 58.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 63, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 59.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 64, 
    'stepTime': 59.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 64, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 60.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 65, 
    'stepTime': 60.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 65, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 61.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 66, 
    'stepTime': 61.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 66, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 62.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 67, 
    'stepTime': 62.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 67, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 63.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 68, 
    'stepTime': 63.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 68, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 64.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 69, 
    'stepTime': 64.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 69, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 65.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 70, 
    'stepTime': 65.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 70, 
    'jobName': 'StaticComparisonRound5'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Rail_2-1'].faces.getSequenceFromMask(
    mask=('[#200010 #1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Rail_1-1'].faces.getSequenceFromMask(
    mask=('[#40020020 #8000 ]', ), ), name='Set-11')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-2', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-11'], u1=0.0, 
    u2=UNSET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 66.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 71, 
    'stepTime': 66.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 71, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 67.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 72, 
    'stepTime': 67.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 72, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 68.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 73, 
    'stepTime': 68.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 73, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 69.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 74, 
    'stepTime': 69.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 74, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 70.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 75, 
    'stepTime': 70.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 75, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 71.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 76, 
    'stepTime': 71.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 76, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 72.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 77, 
    'stepTime': 72.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 77, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 73.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 78, 
    'stepTime': 73.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 78, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 74.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 79, 
    'stepTime': 74.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 79, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 75.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 80, 
    'stepTime': 75.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 80, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 76.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 81, 
    'stepTime': 76.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 81, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 77.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 82, 
    'stepTime': 77.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 82, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 78.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 83, 
    'stepTime': 78.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 83, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 79.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 84, 
    'stepTime': 79.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 84, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 80.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 85, 
    'stepTime': 80.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 85, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 81.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 86, 
    'stepTime': 81.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 86, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 82.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 87, 
    'stepTime': 82.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 87, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 83.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 88, 
    'stepTime': 83.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 88, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 84.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 89, 
    'stepTime': 84.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 89, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 85.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 90, 
    'stepTime': 85.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 90, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 86.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 91, 
    'stepTime': 86.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 91, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 87.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 92, 
    'stepTime': 87.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 92, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 88.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 93, 
    'stepTime': 88.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 93, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 89.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 94, 
    'stepTime': 89.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 94, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 90.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 95, 
    'stepTime': 90.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 95, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 91.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 96, 
    'stepTime': 91.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 96, 
    'jobName': 'StaticComparisonRound5'})
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='StaticTry6', nodalOutputPrecision=SINGLE
    , numCpus=4, numDomains=4, numGPUs=0, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 92.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 97, 
    'stepTime': 92.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 97, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 93.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 98, 
    'stepTime': 93.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 98, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 94.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 99, 
    'stepTime': 94.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 99, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 95.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 100, 
    'stepTime': 95.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 100, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 96.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 101, 
    'stepTime': 96.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 101, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 97.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 102, 
    'stepTime': 97.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 102, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 98.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 103, 
    'stepTime': 98.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 103, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 99.178125, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 104, 
    'stepTime': 99.178125, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 104, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 105, 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(STATUS, {'totalTime': 100.0, 
    'attempts': 1, 'timeIncrement': 0.821875000000006, 'increment': 105, 
    'stepTime': 100.0, 'step': 1, 'jobName': 'StaticComparisonRound5', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticComparisonRound5']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticComparisonRound5']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 01:58:43 2021', 'jobName': 'StaticComparisonRound5'})
mdb.jobs['StaticTry6'].submit(consistencyChecking=OFF)
mdb.jobs['StaticTry6']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\StaticTry6.odb', 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 32996, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'StaticTry6', 'memory': 1101.0})
mdb.jobs['StaticTry6']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16089.0, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(MINIMUM_MEMORY, {'minimum_memory': 187.0, 
    'phase': STANDARD_PHASE, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 1.41875, 'attempts': 1, 
    'timeIncrement': 0.50625, 'increment': 6, 'stepTime': 1.41875, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 2.178125, 'attempts': 1, 
    'timeIncrement': 0.759375, 'increment': 7, 'stepTime': 2.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 3.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 8, 'stepTime': 3.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 4.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 9, 'stepTime': 4.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 5.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 10, 'stepTime': 5.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 6.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 11, 'stepTime': 6.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 7.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 12, 'stepTime': 7.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 8.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 13, 'stepTime': 8.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 9.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 14, 'stepTime': 9.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 10.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 15, 'stepTime': 10.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 11.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 16, 'stepTime': 11.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 12.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 17, 'stepTime': 12.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 13.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 18, 'stepTime': 13.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 14.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 19, 'stepTime': 14.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 15.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 20, 'stepTime': 15.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 16.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 21, 'stepTime': 16.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 17.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 22, 'stepTime': 17.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 18.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 23, 'stepTime': 18.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 19.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 24, 'stepTime': 19.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 20.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 25, 'stepTime': 20.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 21.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 26, 'stepTime': 21.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 22.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 27, 'stepTime': 22.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 23.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 28, 'stepTime': 23.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 24.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 29, 'stepTime': 24.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 25.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 30, 'stepTime': 25.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 26.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 31, 'stepTime': 26.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 27.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 32, 'stepTime': 27.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 28.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 33, 'stepTime': 28.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 29.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 34, 'stepTime': 29.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 30.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 35, 'stepTime': 30.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 31.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 36, 'stepTime': 31.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 32.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 37, 'stepTime': 32.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 33.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 38, 'stepTime': 33.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 34.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 39, 'stepTime': 34.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 35.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 40, 'stepTime': 35.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 36.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 41, 'stepTime': 36.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 37.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 42, 'stepTime': 37.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 38.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 43, 'stepTime': 38.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 39.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 44, 'stepTime': 39.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 40.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 45, 'stepTime': 40.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 41.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 46, 'stepTime': 41.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 42.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 47, 'stepTime': 42.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 43.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 48, 'stepTime': 43.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 44.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 49, 'stepTime': 44.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 45.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 50, 'stepTime': 45.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 50, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 46.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 51, 'stepTime': 46.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 51, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 47.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 52, 'stepTime': 47.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 52, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 48.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 53, 'stepTime': 48.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 53, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 49.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 54, 'stepTime': 49.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 54, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 50.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 55, 'stepTime': 50.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 55, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 51.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 56, 'stepTime': 51.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 56, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 52.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 57, 'stepTime': 52.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 57, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 53.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 58, 'stepTime': 53.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 58, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 54.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 59, 'stepTime': 54.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 59, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 55.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 60, 'stepTime': 55.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 60, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 56.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 61, 'stepTime': 56.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 61, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 57.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 62, 'stepTime': 57.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 62, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 58.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 63, 'stepTime': 58.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 63, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 59.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 64, 'stepTime': 59.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 64, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 60.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 65, 'stepTime': 60.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 65, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 61.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 66, 'stepTime': 61.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 66, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 62.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 67, 'stepTime': 62.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 67, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 63.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 68, 'stepTime': 63.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 68, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 64.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 69, 'stepTime': 64.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 69, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 65.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 70, 'stepTime': 65.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 70, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 66.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 71, 'stepTime': 66.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 71, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 67.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 72, 'stepTime': 67.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 72, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 68.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 73, 'stepTime': 68.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 73, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 69.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 74, 'stepTime': 69.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 74, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 70.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 75, 'stepTime': 70.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 75, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 71.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 76, 'stepTime': 71.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 76, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 72.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 77, 'stepTime': 72.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 77, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 73.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 78, 'stepTime': 73.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 78, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 74.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 79, 'stepTime': 74.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 79, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 75.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 80, 'stepTime': 75.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 80, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 76.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 81, 'stepTime': 76.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 81, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 77.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 82, 'stepTime': 77.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 82, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 78.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 83, 'stepTime': 78.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 83, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 79.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 84, 'stepTime': 79.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 84, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 80.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 85, 'stepTime': 80.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 85, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 81.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 86, 'stepTime': 81.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 86, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 82.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 87, 'stepTime': 82.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 87, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 83.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 88, 'stepTime': 83.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 88, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 84.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 89, 'stepTime': 84.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 89, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 85.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 90, 'stepTime': 85.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 90, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 86.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 91, 'stepTime': 86.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 91, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 87.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 92, 'stepTime': 87.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 92, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 88.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 93, 'stepTime': 88.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 93, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 89.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 94, 'stepTime': 89.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 94, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 90.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 95, 'stepTime': 90.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 95, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 91.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 96, 'stepTime': 91.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 96, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 92.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 97, 'stepTime': 92.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 97, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 93.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 98, 'stepTime': 93.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 98, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 94.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 99, 'stepTime': 94.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 99, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 95.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 100, 'stepTime': 95.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 100, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 96.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 101, 'stepTime': 96.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 101, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 97.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 102, 'stepTime': 97.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 102, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 98.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 103, 'stepTime': 98.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 103, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 99.178125, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 104, 'stepTime': 99.178125, 'step': 1, 
    'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 104, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 105, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(STATUS, {'totalTime': 100.0, 'attempts': 1, 
    'timeIncrement': 0.821875000000006, 'increment': 105, 'stepTime': 100.0, 
    'step': 1, 'jobName': 'StaticTry6', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['StaticTry6']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'StaticTry6'})
mdb.jobs['StaticTry6']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 02:02:37 2021', 'jobName': 'StaticTry6'})
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].loads['Load-2'].resume()
# Save by js214 on 2021_03_23-02.05.47; build 2019 2018_09_24-14.41.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='statictestforceround8', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.models['Model-1'].steps['Step-2'].setValues(maxNumInc=100, minInc=1e-05, 
    timePeriod=1.0)
mdb.jobs['statictestforceround8'].submit(consistencyChecking=OFF)
mdb.jobs['statictestforceround8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 0, 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_1-1_SN,ASSEMBLY__T0_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_1-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_1-1_SN,ASSEMBLY__T1_RAIL_1-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_3-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T0_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T0_RAIL_4-1_SN,ASSEMBLY__T0_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SLAVE SURFACE ASSEMBLY__T1_RAIL_4-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'PLEASE MAKE SURE THAT THE MESH DENSITY OF THE SLAVE SURFACE IN THE TIE PAIR (ASSEMBLY__T1_RAIL_4-1_SN,ASSEMBLY__T1_RAIL_4-1_M) IS FINER THAN THE MASTER SURFACE.  THE ANALYSIS MAY RUN SLOWER, MAY YIELD INACCURATE RESULTS, AND MAY REQUIRE MORE MEMORY IF THIS IS NOT THE CASE.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-1-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-1-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-4-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-4-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-8-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-8-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-12-BASEPLATE_DEPLOYMENT-1-ASSEMBLY_CP-12-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-14-BASEPLATE_PLAIN-1-ASSEMBLY_CP-14-RAIL_1-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-17-BASEPLATE_PLAIN-1-ASSEMBLY_CP-17-RAIL_2-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-21-BASEPLATE_PLAIN-1-ASSEMBLY_CP-21-RAIL_3-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_CP-25-BASEPLATE_PLAIN-1-ASSEMBLY_CP-25-RAIL_4-1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '184 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes are either missing intersection with their respective master surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMasterIntersect.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1043 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-1 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\ABAQUS\\statictestforceround8.odb', 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-7050F5S', 'handle': 7504, 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'statictestforceround8', 
    'memory': 1102.0})
mdb.jobs['statictestforceround8']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 16089.0, 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 187.0, 'phase': STANDARD_PHASE, 
    'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'statictestforceround8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'statictestforceround8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 0.35, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 
    'step': 1, 'jobName': 'statictestforceround8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 0.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 1, 'jobName': 'statictestforceround8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 0.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 1, 'jobName': 'statictestforceround8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.0874999999999999, 'increment': 6, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'statictestforceround8', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['statictestforceround8']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'statictestforceround8'})
mdb.jobs['statictestforceround8']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar 23 02:07:04 2021', 'jobName': 'statictestforceround8'})
# Save by js214 on 2021_03_23-02.11.42; build 2019 2018_09_24-14.41.51 157541
